{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

() recv_internal() {
}

;; testable
(int) tlen (tuple t) asm "TLEN";
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
  int rows_A = matrixA.tlen();
  int cols_A = matrixA.at(0).tlen();
  int rows_B = matrixB.tlen();
  int cols_B = matrixB.at(0).tlen();
  if ( cols_A != rows_B){
    return null();
  }
  tuple result = empty_tuple();
  int i = 0;
  while ( i < rows_A ){
    tuple row = empty_tuple();
    int j = 0;
    while ( j < cols_B ){
      int cell_value = 0;
      int k = 0;
      while (k < cols_A){
        cell_value += matrixA.at(i).at(k) * matrixB.at(k).at(j);
        k += 1;
      }
      row~tpush(cell_value);
      j += 1;
    }
    result~tpush(row);
    i += 1;
  }
  return result;
}

